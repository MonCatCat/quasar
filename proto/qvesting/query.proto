syntax = "proto3";
package quasarlabs.quasarnode.qvesting;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "qvesting/params.proto";
import "google/protobuf/any.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

// this line is used by starport scaffolding # 1

option go_package = "github.com/quasarlabs/quasarnode/x/qvesting/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/quasar/qvesting/params";
  }
  // SpendableBalances queries the spenable balance of all coins for a single
  // account.
  rpc SpendableBalances(QuerySpendableBalancesRequest) returns (QuerySpendableBalancesResponse) {
    option (google.api.http).get = "/cosmos/bank/v1beta1/spendable_balances/{address}";
  }
  // VestingAccounts returns all the existing vesting accounts
  rpc VestingAccounts(QueryVestingAccountsRequest) returns (QueryVestingAccountsResponse) {
    option (google.api.http).get = "/quasar/qvesting/vesting_accounts";
  }
  // this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QuerySpendableBalancesRequest defines the gRPC request structure for querying
// an account's spendable balances.
message QuerySpendableBalancesRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // address is the address to query spendable balances for.
  string address = 1;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QuerySpendableBalancesResponse defines the gRPC response structure for querying
// an account's spendable balances.
message QuerySpendableBalancesResponse {
  // balances is the spendable balances of all the coins.
  repeated cosmos.base.v1beta1.Coin balances = 1
  [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryVestingAccountsRequest is the request type for the Query/Accounts RPC method.
message QueryVestingAccountsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryVestingAccountsResponse is the response type for the Query/Accounts RPC method.
message QueryVestingAccountsResponse {
  // accounts are the existing vesting accounts
  repeated google.protobuf.Any accounts = 1 [(cosmos_proto.accepts_interface) = "VestingAccount"];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
